// Shared SCSS Mixins for modular and reusable components
// Following BEM methodology and mobile-first approach

// Card Base Mixin - Reusable card pattern
@mixin card-base {
  background-color: var(--card-bg);
  border-radius: var(--border-radius-lg);
  border: 1px solid var(--card-border);
  transition: all 0.2s ease;
  box-shadow: var(--card-shadow);
}

// Interactive Card Mixin - For clickable cards
@mixin card-interactive {
  @include card-base;
  cursor: pointer;

  &:hover {
    background-color: var(--card-bg-hover);
    box-shadow: var(--card-shadow-hover);
    transform: translateY(-1px);
  }

  &:focus-visible {
    outline: var(--focus-outline);
    outline-offset: 0.125rem;
    box-shadow: var(--focus-shadow);
  }

  &:active {
    transform: translateY(0);
  }
}

// Card Layout Mixin - Standard card content layout
@mixin card-layout($padding: var(--space-4)) {
  display: flex;
  align-items: center;
  padding: $padding;
  min-height: 72px;
}

// Icon Container Mixin - Standard icon styling
@mixin icon-container($size: 48px) {
  width: $size;
  height: $size;
  border-radius: var(--border-radius-lg);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  flex-shrink: 0;
}

// Icon Content Mixin - For emoji and image icons
@mixin icon-content($emoji-size: 24px) {
  // Emoji styling
  &__emoji {
    font-size: $emoji-size;
    line-height: 1;
    user-select: none;
  }

  // Image styling
  &__image {
    width: 100%;
    height: 100%;
    object-fit: cover;
    border-radius: var(--border-radius-lg);
  }
}

// Button Base Mixin - Consistent button styling
@mixin button-base {
  background-color: var(--button-bg);
  color: var(--button-text);
  border: none;
  border-radius: var(--border-radius-md);
  padding: var(--space-2) var(--space-4);
  font-size: var(--font-size-base);
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s ease;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  text-decoration: none;

  &:hover {
    background-color: var(--button-bg-hover);
    box-shadow: var(--focus-shadow);
  }

  &:focus-visible {
    outline: var(--focus-outline);
    outline-offset: 0.25rem;
    box-shadow: var(--focus-shadow);
  }

  &:active {
    transform: translateY(0.0625rem);
  }

  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;

    &:hover {
      background-color: var(--button-bg);
      box-shadow: none;
    }
  }
}

// Button Variants Mixin
@mixin button-ghost {
  background-color: transparent;
  color: var(--button-ghost-text);
  border: 0.0625rem solid var(--button-ghost-border);

  &:hover {
    background-color: var(--button-ghost-bg-hover);
    box-shadow: none;
  }
}

@mixin button-small {
  padding: var(--space-1) var(--space-3);
  font-size: var(--font-size-sm);
}

@mixin button-large {
  padding: var(--space-3) var(--space-6);
  font-size: var(--font-size-lg);
}

// Header Layout Mixin - Standard header pattern
@mixin header-layout {
  background-color: var(--header-bg);
  border-bottom: 1px solid var(--card-border);
  position: sticky;
  top: 0;
  z-index: 100;
  box-shadow: var(--header-shadow);
}

@mixin header-content {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: var(--space-4);
  max-width: 100%;

  @media (min-width: 768px) {
    padding: var(--space-4) var(--space-8);
  }
}

// Text Mixins - Consistent text styling
@mixin text-title {
  margin: 0;
  font-size: var(--font-size-xl);
  font-weight: bold;
  color: var(--text-color);

  @media (min-width: 768px) {
    font-size: var(--font-size-2xl);
  }
}

@mixin text-section-title {
  margin: 0 0 var(--space-4) 0;
  font-size: var(--font-size-2xl);
  font-weight: bold;
  color: var(--text-color);

  @media (min-width: 768px) {
    font-size: var(--font-size-3xl);
    margin-bottom: var(--space-6);
  }
}

@mixin text-card-title {
  margin: 0 0 var(--space-1) 0;
  font-size: var(--font-size-lg);
  font-weight: 600;
  color: var(--text-color);
  line-height: 1.2;
}

@mixin text-card-description {
  margin: 0;
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
  line-height: 1.2;
}

// Layout Mixins - Common layout patterns
@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column-gap($gap: var(--space-3)) {
  display: flex;
  flex-direction: column;
  gap: $gap;
}

// Responsive Grid Mixin
@mixin responsive-grid($mobile-cols: 1, $tablet-cols: 2, $desktop-cols: 3, $gap: var(--space-4)) {
  display: grid;
  grid-template-columns: repeat($mobile-cols, 1fr);
  gap: $gap;

  @media (min-width: 768px) {
    grid-template-columns: repeat($tablet-cols, 1fr);
  }

  @media (min-width: 1200px) {
    grid-template-columns: repeat($desktop-cols, 1fr);
  }
}

// Container Mixin - Mobile-first container
@mixin container($max-width: 480px) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 var(--space-4);

  @media (min-width: 768px) {
    padding: 0 var(--space-8);
  }
}

// Safe Area Mixin - Handle mobile safe areas
@mixin safe-area-bottom($additional-padding: 0) {
  padding-bottom: calc(#{$additional-padding} + env(safe-area-inset-bottom));
}

// Level/Game State Mixins - Specific to game components
@mixin level-unlocked {
  background: var(--level-unlocked);
  color: var(--white);

  &:hover {
    box-shadow: var(--level-unlocked-hover);
  }
}

@mixin level-locked {
  background-color: var(--level-locked);
  opacity: 0.6;
  cursor: not-allowed;

  &:hover {
    transform: none;
    box-shadow: var(--card-shadow);
  }
}

@mixin level-completed {
  background: var(--level-completed);
  color: var(--white);

  &:hover {
    box-shadow: var(--level-completed-hover);
  }
}

@mixin level-featured {
  background: var(--level-featured);
  color: var(--white);

  &:hover {
    box-shadow: var(--level-featured-hover);
  }
}

// Animation Mixins
@mixin smooth-hover($property: transform, $value: translateY(-2px)) {
  transition: all 0.2s ease;

  &:hover {
    #{$property}: #{$value};
  }
}

@mixin fade-in($duration: 0.3s) {
  opacity: 0;
  animation: fadeIn $duration ease-in-out forwards;
}

@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Utility Mixins
@mixin visually-hidden {
  position: absolute;
  width: 0.0625rem;
  height: 0.0625rem;
  padding: 0;
  margin: -0.0625rem;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

@mixin truncate-text {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}